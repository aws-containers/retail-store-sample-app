name: E2E Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions: {}

jobs:
  docker:
    name: Docker E2E Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Setup Env"
        uses: ./.github/actions/setup-env
      - name: Compose up
        shell: devenv shell bash -- -e {0}
        run: |
          yarn nx compose:up ui
          sleep 60
      - name: Test
        shell: devenv shell bash -- -e {0}
        run: |
          CYPRESS_BASE_URL='http://localhost:8888' yarn nx execute e2e
      - name: Compose down
        shell: devenv shell bash -- -e {0}
        run: |
          yarn nx compose:down ui

  docker-multi:
    name: Docker E2E Tests (Multi)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Setup Env"
        uses: ./.github/actions/setup-env
      - name: Compose up
        shell: devenv shell bash -- -e {0}
        run: |
          DB_PASSWORD='test123' yarn nx compose:up
          sleep 60
      - name: Test
        shell: devenv shell bash -- -e {0}
        run: |
          CYPRESS_BASE_URL='http://localhost:8888' yarn nx execute e2e
      - name: Load Generator
        shell: devenv shell bash -- -e {0}
        run: |
          cd src/load-generator
          bash scripts/run-docker.sh -n app_default -t 'http://ui:8080' -d 30 -o /tmp/test.json

          result=$(jq '.aggregate.counters."vusers.failed" == 0' /tmp/test.json)

          if [ "$result" = "false" ]; then
            echo "Check failed: vusers.failed is not 0"
            exit 1
          fi
      - name: Compose down
        shell: devenv shell bash -- -e {0}
        run: |
          DB_PASSWORD='test123' yarn nx compose:up

  kubernetes:
    name: Kubernetes E2E Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Setup Env"
        uses: ./.github/actions/setup-env

      - name: Build images
        shell: devenv shell bash -- -e {0}
        run: |
          yarn nx run-many -t build --projects=tag:service --parallel=1

          yarn nx run-many -t container --projects=tag:service \
            --tags public.ecr.aws/aws-containers/retail-store-sample-{projectName}:e2e --parallel=5

      - name: Kind cluster
        uses: helm/kind-action@v1.12.0
        with:
          cluster_name: kind
          version: v0.17.0

      - name: Load images
        env:
          IMAGE_TAG: e2e
        run: |
          kind load docker-image public.ecr.aws/aws-containers/retail-store-sample-catalog:$IMAGE_TAG
          kind load docker-image public.ecr.aws/aws-containers/retail-store-sample-cart:$IMAGE_TAG
          kind load docker-image public.ecr.aws/aws-containers/retail-store-sample-checkout:$IMAGE_TAG
          kind load docker-image public.ecr.aws/aws-containers/retail-store-sample-orders:$IMAGE_TAG
          kind load docker-image public.ecr.aws/aws-containers/retail-store-sample-ui:$IMAGE_TAG

      - name: Deploy
        shell: devenv shell bash -- -e {0}
        env:
          IMAGE_TAG: e2e
        run: |
          NODE_PORT=30000 helmfile apply -f src/app/helmfile.yaml --wait --skip-diff-on-install

          kubectl wait --for=condition=Ready pod -l app.kubernetes.io/owner=retail-store-sample --timeout 180s || exit_code=$?

      - name: Test
        shell: devenv shell bash -- -e {0}
        run: |
          bash scripts/e2e-kind.sh

name: E2E Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions: {}

jobs:
  docker:
    name: Docker E2E Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v26
      - uses: cachix/cachix-action@v14
        with:
          name: devenv
      - name: Install devenv.sh
        run: nix profile install nixpkgs#devenv
      - name: Yarn install
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: devenv shell yarn install
      - name: Test
        shell: devenv shell bash -- -e {0}
        run: |
          MYSQL_PASSWORD='test123' yarn nx store:compose:up
          wait 60
          MYSQL_PASSWORD='test123' yarn nx store:compose:up

  kubernetes:
    name: Kubernetes E2E Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v26
      - uses: cachix/cachix-action@v14
        with:
          name: devenv
      - name: Install devenv.sh
        run: nix profile install nixpkgs#devenv
      - name: Yarn install
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: devenv shell yarn install
      - name: Test
        shell: devenv shell bash -- -e {0}
        run: |
          yarn nx run-many -t container --projects=tag:service --tags public.ecr.aws/aws-containers/retail-store-sample-{projectName}:e2e

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.4.0
        with:
          cluster_name: kind
          version: v0.17.0

      - name: Deploy
        env:
          IMAGE_TAG: e2e
        run: |
          kind load docker-image public.ecr.aws/aws-containers/retail-store-sample-catalog:$IMAGE_TAG
          kind load docker-image public.ecr.aws/aws-containers/retail-store-sample-cart:$IMAGE_TAG
          kind load docker-image public.ecr.aws/aws-containers/retail-store-sample-checkout:$IMAGE_TAG
          kind load docker-image public.ecr.aws/aws-containers/retail-store-sample-orders:$IMAGE_TAG
          kind load docker-image public.ecr.aws/aws-containers/retail-store-sample-ui:$IMAGE_TAG

          (cd deploy/kubernetes/charts && helmfile apply --wait)

          sleep 60

          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Service
          metadata:
            name: ui-nodeport
          spec:
            type: NodePort
            selector:
              app.kubernetes.io/name: ui
              app.kubernetes.io/instance: ui
              app.kubernetes.io/component: service
            ports:
              - port: 80
                targetPort: http
                nodePort: 30000
          EOF

      #- name: Test
      #  run: |
      #    bash scripts/e2e-kind.sh

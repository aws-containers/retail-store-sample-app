# Default values for ui.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: watchn/watchn-ui
  pullPolicy: IfNotPresent
  tag: "build.1615751790"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
      - ALL
    add:
      - NET_BIND_SERVICE
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources:
  limits:
    memory: 256Mi
  requests:
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

metrics:
  enabled: true
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/actuator/prometheus"

configMap:
  create: true
  name: # if blank this will be generated

endpoints:
  catalog: http://catalog:80
  carts: http://carts:80
  orders: http://orders:80
  assets: http://assets:80

## Ingress for load balancer
ingress:
  enabled: false

#   labels:
#     dns: "route53"
#
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     kubernetes.io/tls-acme: "true"
#
#  hosts:
#    - example.domain1.com
#    
#  tls:
#    - secretName: ingress-secret
#      hosts: 
#        - example.domain1.com

istio:
  enabled: false

#  hosts:
#    - example.domain1.com
#    
#  tls:
#    issuer:
#      name: issuer
#      kind: Issuer
#    secretName: ingress-cert
#    hosts: 
#      - example.domain1.com